implement open

From: Stephen M. Cameron <smcameron@yahoo.com>


---
 drivers/char/demo.c |   32 ++++++++++++++++++++++----------
 1 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/drivers/char/demo.c b/drivers/char/demo.c
index a3827a8..7a3f778 100644
--- a/drivers/char/demo.c
+++ b/drivers/char/demo.c
@@ -14,9 +14,30 @@ static struct demo_device {
 	int chr_major;
 } d;
 
+static int demo_open(struct inode *inode, struct file *filp);
+static ssize_t demo_read(struct file *filp, char __user *ubuf,
+				size_t count, loff_t *offp);
+static ssize_t demo_write(struct file *filp, const char __user *ubuf,
+				size_t count, loff_t *offp);
+static int demo_release(struct inode *inode, struct file *filp);
+
+static const struct file_operations demo_fops = {
+	.owner = THIS_MODULE,
+	.open  = demo_open,
+	.read  = demo_read,
+	.write = demo_write,
+	.release = demo_release,
+	.llseek = no_llseek,
+};
+
 static int demo_open(struct inode *inode, struct file *filp)
 {
-	return 0;
+	unsigned int m = iminor(inode);
+	filp->private_data = &demo_fops;
+
+	if (m > 0)
+		return -EINVAL;
+	return nonseekable_open(inode, filp);
 }
 
 static ssize_t demo_read(struct file *filp, char __user *ubuf,
@@ -36,15 +57,6 @@ static int demo_release(struct inode *inode, struct file *filp)
 	return 0;
 }
 
-static const struct file_operations demo_fops = {
-	.owner = THIS_MODULE,
-	.open  = demo_open,
-	.read  = demo_read,
-	.write = demo_write,
-	.release = demo_release,
-	.llseek = no_llseek,
-};
-
 static int __init demo_init(void)
 {
 	int rc;
